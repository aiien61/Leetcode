Given a singly linked list that contains integer values, where some of these values may be duplicated.

Note: this linked list class does NOT have a tail which will make this method easier to implement.

The task is to implement a method called remove_duplicates() within the LinkedList class that 
removes all duplicate values from the list.

The linked list class method should not create a new list, but rather modify the existing list in-place, 
preserving the relative order of the nodes.


There are two different ways to implement the remove_duplicates():

Using a Set - This approach will have a time complexity of O(n), where n is the number of nodes in 
the linked list. It's allowed to use the provided Set data structure in your implementation.

Without using a Set - This approach will have a time complexity of O(n^2), where n is the number of 
nodes in the linked list. It's not allowed to use any additional data structures for this implementation.



Here is the method signature required to implement:

def remove_duplicates(self):


Example:

Input:

LinkedList: 1 -> 2 -> 3 -> 1 -> 4 -> 2 -> 5

Output:

LinkedList: 1 -> 2 -> 3 -> 4 -> 5

